{"version":3,"sources":["Util.js","App.js","index.js"],"names":["undoList","redoList","toolHandler","e","params","tool","colorSelect","location","x","Math","floor","pageX","window","pageXOffset","canvas","getBoundingClientRect","left","size","y","pageY","pageYOffset","top","canvasWidth","canvasHeight","getColor","push","color","prevColor","alpha","getAlpha","fill","floodFill","ctx","fillStyle","fillRect","length","pop","clearRect","mirX","p","getImageData","data","r","g","b","toString","rgbToHex","slice","q","filter","ar","index","self","findIndex","t","loc","shift","initcolor","leftLocation","leftColor","rightLocation","rightColor","upLocation","upColor","downLocation","downColor","colors","App","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimaitonFrame","callback","setTimeout","rect","gridCanvas","gridctx","DistanceToTop","DistanceToLeft","lastLoc","grid","isDrawing","document","addEventListener","getElementById","getContext","touchStart","touchEnd","touchMove","mouseDown","mouseUp","mouseMove","touch","touches","col","console","log","scrollX","scrollY","offsetLeft","offsetTop","vals","cancelable","preventDefault","Navbar","bg","expand","Brand","href","Toggle","aria-controls","className","width","triangle","onChangeComplete","hex","Button","variant","onClick","undoButton","redoButton","id","download","toDataURL","save","height","style","cursor","beginPath","moveTo","lineTo","strokeStyle","stroke","toggleGrid","clear","rootElement","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.93f97da7.chunk.js","sourcesContent":["let undoList = []\r\nlet redoList = []\r\n\r\nexport const clear = (params) => {\r\n  params.ctx.clearRect(0, 0, params.canvasWidth, params.canvasHeight)\r\n  return 'draw'\r\n}\r\nexport const save = () => {\r\n  const canvas = document.getElementById('canvas')\r\n  document.getElementById('saveButton').href = canvas.toDataURL()\r\n}\r\nexport const rgbToHex = (r, g, b) => {\r\n  if (r > 255 || g > 255 || b > 255) { throw 'Invalid color component' }\r\n  return ((r << 16) | (g << 8) | b).toString(16)\r\n}\r\nconst arrayUniqueFill = (arr) => {\r\n  return (arr.filter((ar, index, self) => self.findIndex(t => t.x === ar.x && t.y === ar.y) === index))\r\n}\r\nexport const toolHandler = (e, params, tool, colorSelect) => {\r\n  const location = { x: Math.floor((e.pageX - (window.pageXOffset + params.canvas.getBoundingClientRect().left)) / params.size), y: Math.floor((e.pageY - (window.pageYOffset + params.canvas.getBoundingClientRect().top)) / params.size) }\r\n  switch (tool) {\r\n    case 'fill':\r\n      if (location.x >= 0 && location.x < params.canvasWidth && location.y >= 0 && location.y < params.canvasHeight) {\r\n        if (colorSelect !== getColor(location, params)) {\r\n          undoList.push({ color: getColor(location, params), prevColor: colorSelect, location, alpha: getAlpha(location, params), fill: true})\r\n          floodFill(location, colorSelect, params, params.canvasWidth/params.size, params.canvasHeight/params.size)\r\n        }\r\n      }\r\n      return { colorSelect, tool }\r\n    case 'draw':\r\n      undoList.push({ color: getColor(location, params), prevColor: colorSelect, location, alpha: getAlpha(location, params)})\r\n\r\n      params.ctx.fillStyle = colorSelect\r\n      params.ctx.fillRect(location.x * params.size, location.y * params.size, params.size, params.size)\r\n      return { colorSelect, tool }\r\n    case 'undo':\r\n      if (undoList.length > 0) {\r\n        if (undoList[undoList.length-1].fill) {\r\n          if (undoList[undoList.length-1].alpha) {\r\n            floodFill(undoList[undoList.length - 1].location, undoList[undoList.length - 1].color, params, params.canvasWidth / params.size, params.canvasHeight / params.size)\r\n          } else {\r\n            floodFill(undoList[undoList.length - 1].location, \"alpha\", params, params.canvasWidth / params.size, params.canvasHeight / params.size)\r\n          }\r\n          undoList.pop()\r\n          tool = 'draw'\r\n          return { colorSelect, tool }\r\n        }\r\n        else if (undoList[undoList.length-1].alpha) {\r\n          params.ctx.fillStyle = undoList[undoList.length - 1].color\r\n          params.ctx.fillRect(undoList[undoList.length - 1].location.x * params.size, undoList[undoList.length - 1].location.y * params.size, params.size, params.size)\r\n          redoList.push({color: undoList[undoList.length-1].prevColor, location: undoList[undoList.length-1].location, alpha: undoList[undoList.length-1].alpha});\r\n        } else {\r\n          params.ctx.clearRect(undoList[undoList.length - 1].location.x * params.size, undoList[undoList.length - 1].location.y * params.size, params.size, params.size)\r\n          redoList.push({color: undoList[undoList.length-1].prevColor, location: undoList[undoList.length-1].location, alpha: 0});\r\n        }\r\n        undoList.pop()\r\n      }\r\n      tool = 'draw'\r\n      return { colorSelect, tool }\r\n    case 'redo':\r\n      if (redoList.length > 0) {\r\n        params.ctx.fillStyle = redoList[redoList.length - 1].color;\r\n        params.ctx.fillRect(redoList[redoList.length - 1].location.x * params.size, redoList[redoList.length - 1].location.y * params.size, params.size, params.size);\r\n        redoList.pop();\r\n      }\r\n      tool = 'draw'\r\n      return { colorSelect, tool }\r\n    case 'mirror':\r\n      let mirX = (params.canvasWidth/params.size) - location.x -1\r\n      undoList.push({ color: getColor(location, params), prevColor: colorSelect, location })\r\n      undoList.push({ color: getColor(location, params), prevColor: colorSelect, location: {x: mirX, y: location.y} })\r\n      params.ctx.fillStyle = colorSelect\r\n      params.ctx.fillRect(location.x * params.size, location.y * params.size, params.size, params.size)\r\n      params.ctx.fillRect(mirX * params.size, location.y * params.size, params.size, params.size)\r\n\r\n      return { colorSelect, tool }\r\n    case 'erase':\r\n      const alpha = getAlpha(location, params)\r\n      if (alpha) {\r\n        undoList.push({ color: getColor(location, params), prevColor: colorSelect, location, alpha})\r\n        params.ctx.clearRect(location.x * params.size, location.y * params.size, params.size, params.size)\r\n      }\r\n      return { colorSelect, tool }\r\n    case 'picker':\r\n      colorSelect = getAlpha(location, params)\r\n      tool = 'draw'\r\n      return { colorSelect, tool }\r\n    default:\r\n      params.ctx.clearRect(0, 0, params.canvasWidth, params.canvasHeight)\r\n      return { colorSelect, tool }\r\n  }\r\n}\r\nexport const getColor = (location, params) => {\r\n  const p = params.ctx.getImageData(location.x * params.size, location.y * params.size, 1, 1).data\r\n  return '#' + ('000000' + rgbToHex(p[0], p[1], p[2])).slice(-6)\r\n};\r\n\r\nexport const getAlpha = (location, params) => {\r\n  return params.ctx.getImageData(location.x * params.size, location.y * params.size, 1, 1).data[3];\r\n};\r\n\r\nconst floodFill = (location, colorSelect, params, canvasWidth, canvasHeight) => {\r\n  let q = []\r\n  q.push(location)\r\n  q.push(location); q.push(location); q.push(location)\r\n  while (q.length > 0) {\r\n    q = arrayUniqueFill(q)\r\n    const loc = q.shift()\r\n    const initcolor = getColor(loc, params)\r\n    if (colorSelect === \"alpha\") {\r\n      params.ctx.clearRect(loc.x * params.size, loc.y * params.size, params.size, params.size)\r\n    } else {\r\n      params.ctx.fillStyle = colorSelect\r\n      params.ctx.fillRect(loc.x * params.size, loc.y * params.size, params.size, params.size)\r\n    }\r\n\r\n\r\n    const leftLocation = { x: loc.x - 1, y: loc.y }\r\n    const leftColor = getColor(leftLocation, params)\r\n    const rightLocation = { x: loc.x + 1, y: loc.y }\r\n    const rightColor = getColor(rightLocation, params)\r\n    const upLocation = { x: loc.x, y: loc.y - 1 }\r\n    const upColor = getColor(upLocation, params)\r\n    const downLocation = { x: loc.x, y: loc.y + 1 }\r\n    const downColor = getColor(downLocation, params)\r\n\r\n    if (leftLocation.x >= 0 && leftColor === initcolor) {\r\n      q.push(leftLocation)\r\n    }\r\n    if (rightLocation.x < (canvasWidth) && !(location.x === canvasWidth) && rightColor === initcolor) {\r\n      q.push(rightLocation)\r\n    }\r\n    if (upLocation.y >= 0 && upColor === initcolor) {\r\n      q.push(upLocation)\r\n    }\r\n    if (downLocation.y < (canvasHeight) && !(location.y === canvasHeight) && downColor === initcolor) {\r\n      q.push(downLocation)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { GithubPicker } from 'react-color'\r\nimport './app.css'\r\nimport { Button, Navbar } from 'react-bootstrap'\r\n\r\nimport { toolHandler, save, clear, getColor } from './Util'\r\n\r\nconst size = 25\r\nconst width = 16\r\nconst height = 16\r\nconst canvasWidth = size * width\r\nconst canvasHeight = size * height\r\n\r\n\r\nconst colors = ['#ffebee', '#ffcdd2', '#ef9a9a', '#e57373', '#ef5350', '#f44336', '#e53935', '#d32f2f', '#c62828', '#b71c1c',\r\n  '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f',\r\n  '#f3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c',\r\n  '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92',\r\n  '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e',\r\n  '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0d47a1',\r\n  '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b',\r\n  '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064',\r\n  '#e0f2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40',\r\n  '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20',\r\n  '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e',\r\n  '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#cddc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717',\r\n  '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17',\r\n  '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00',\r\n  '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100',\r\n  '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c',\r\n  '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723',\r\n  '#fafafa', '#f5f5f5', '#eeeeee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121',\r\n  '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#607d8b', '#546e7a', '#455a64', '#37474f', '#263238',\r\n  '#ffffff', '#000000']\r\n\r\nconst App = () => {\r\n  // Get a regular interval for drawing to the screen\r\n  window.requestAnimFrame = (function (callback) {\r\n    return window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame ||\r\n      window.oRequestAnimationFrame ||\r\n      window.msRequestAnimaitonFrame ||\r\n      function (callback) {\r\n        window.setTimeout(callback, 1000/60);\r\n      };\r\n  })();\r\n  let lastLoc = {}\r\n  let grid = false\r\n  let canvas\r\n  let ctx\r\n  let rect\r\n  let gridCanvas\r\n  let gridctx\r\n  let params = {}\r\n\r\n  let colorSelect = '#ff0000'\r\n  let tool = 'draw'\r\n  let isDrawing = false\r\n\r\n  let DistanceToTop, DistanceToLeft\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    // console.log('started')\r\n    canvas = document.getElementById('canvas')\r\n    ctx = canvas.getContext('2d')\r\n    rect = canvas.getBoundingClientRect()\r\n    gridCanvas = document.getElementById('gridcanvas')\r\n    gridctx = gridCanvas.getContext('2d')\r\n    params = {canvas, ctx, rect, canvasWidth, canvasHeight, size}\r\n    // console.log(params)\r\n    DistanceToTop = window.pageYOffset + canvas.getBoundingClientRect().top\r\n    DistanceToLeft = window.pageXOffset + canvas.getBoundingClientRect().left\r\n    // document.getElementById('testTouch').addEventListener(\"touchstart\", () => {\r\n    //   alert('This is a touch event')\r\n    // }, false);\r\n\r\n    canvas.addEventListener(\"touchstart\", touchStart, false);\r\n    canvas.addEventListener(\"touchend\", touchEnd, false);\r\n    canvas.addEventListener(\"touchcancel\", touchEnd, false);\r\n    canvas.addEventListener(\"touchmove\", touchMove, false);\r\n\r\n    canvas.addEventListener(\"mousedown\", mouseDown, false);\r\n    canvas.addEventListener(\"mouseup\", mouseUp, false);\r\n    canvas.addEventListener(\"mousemove\", mouseMove, false);\r\n    canvas.addEventListener(\"mouseleave\", mouseUp, false);\r\n  });\r\n  // Set up touch events for mobile, etc\r\n  const touchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    // console.log(e.touches[0])\r\n    const location = { x: Math.floor((touch.pageX - (DistanceToLeft)) / size), y: Math.floor((touch.pageY - (DistanceToTop)) / size) }\r\n    // alert('touch'+location.x+ ','+location.y)\r\n    const col = getColor(location, params)\r\n    console.log('touch start',location, window.scrollX, window.scrollY,canvas.offsetLeft, canvas.offsetTop, DistanceToLeft, DistanceToLeft )\r\n    isDrawing = true\r\n    if (!(col===colorSelect) || tool==='erase') {\r\n      lastLoc = location\r\n      const vals = toolHandler(touch, params, tool, colorSelect)\r\n      colorSelect = vals.colorSelect\r\n      tool = vals.tool\r\n    }\r\n  }\r\n\r\n  const touchEnd = (e) => {\r\n    // console.log('touch end')\r\n    if (e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n    isDrawing = false\r\n  };\r\n\r\n  const touchMove = (e) => {\r\n    if (isDrawing) {\r\n      const touch = e.touches[0];\r\n      const location = { x: Math.floor((touch.pageX - (DistanceToLeft)) / size), y: Math.floor((touch.pageY - (DistanceToTop)) / size) }\r\n      const col = getColor(location, params)\r\n      // console.log('touch move',location, ctx)\r\n      if (!(col===colorSelect) || tool==='erase') {\r\n        if (!(lastLoc.x === location.x && lastLoc.y === location.y) || tool==='erase') {\r\n          lastLoc = location\r\n          const vals = toolHandler(touch, params, tool, colorSelect)\r\n          colorSelect = vals.colorSelect\r\n          tool = vals.tool\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const mouseDown = (e) => {\r\n    const location = { x: Math.floor((e.pageX - (DistanceToLeft)) / size), y: Math.floor((e.pageY - (DistanceToTop)) / size) }\r\n    const col = getColor(location, params)\r\n    // alert('mouse'+location.x+ ','+location.y)\r\n    isDrawing = true\r\n    // console.log('mouse',location, ctx, e)\r\n    if (!(col===colorSelect) || tool==='erase') {\r\n      lastLoc = location\r\n      const vals = toolHandler(e, params, tool, colorSelect)\r\n      colorSelect = vals.colorSelect\r\n      tool = vals.tool\r\n    }\r\n  }\r\n  const mouseUp = (e) => {\r\n    isDrawing = false\r\n  }\r\n  const mouseMove = (e) => {\r\n    if (isDrawing) {\r\n      const location = { x: Math.floor((e.pageX - (DistanceToLeft)) / size), y: Math.floor((e.pageY - (DistanceToTop)) / size) }\r\n      const col = getColor(location, params)\r\n      if (!(col===colorSelect) || tool==='erase') {\r\n        if (!(lastLoc.x === location.x && lastLoc.y === location.y) || tool==='erase') {\r\n          lastLoc = location\r\n          const vals = toolHandler(e, params, tool, colorSelect)\r\n          colorSelect = vals.colorSelect\r\n          tool = vals.tool\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const undoButton = (e) => {\r\n    tool = 'undo'\r\n    const vals = toolHandler(e, params, tool, colorSelect)\r\n    colorSelect = vals.colorSelect\r\n    tool = vals.tool\r\n  }\r\n  const redoButton = (e) => {\r\n    tool = 'redo'\r\n    const vals = toolHandler(e, params, tool, colorSelect)\r\n    colorSelect = vals.colorSelect\r\n    tool = vals.tool\r\n  }\r\n\r\n  const toggleGrid = () => {\r\n    gridctx.clearRect(0, 0, canvasWidth, canvasHeight)\r\n    if (!grid) {\r\n      grid = true\r\n      for (let x = 0; x <= width; x++) {\r\n        gridctx.beginPath()\r\n        gridctx.moveTo(x * (size), 0)\r\n        gridctx.lineTo(x * (size), canvasHeight)\r\n        gridctx.strokeStyle = '#000000'\r\n        gridctx.stroke()\r\n      }\r\n      for (let y = 0; y <= height; y++) {\r\n        gridctx.beginPath()\r\n        gridctx.moveTo(0, y * (size))\r\n        gridctx.lineTo(canvasWidth, y * (size))\r\n        ctx.strokeStyle = '#000000'\r\n        gridctx.stroke()\r\n      }\r\n    } else {\r\n      grid = false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg='light' expand='lg'>\r\n        <Navbar.Brand href='#home'>Pixel Perfect by MemeLords</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      </Navbar>\r\n      <div className='row'>\r\n        <div className='leftcolumn'>\r\n          <div className='card'>\r\n            <GithubPicker\r\n              color={colorSelect}\r\n              width={275}\r\n              colors={colors}\r\n              triangle='hide'\r\n              onChangeComplete={color => { colorSelect = color.hex }}\r\n            />\r\n          </div>\r\n          <div className='card'>\r\n            <span>\r\n              <Button variant='primary' className='padding' onClick={() => { tool = 'draw' }}>Draw</Button>\r\n              <Button variant='danger' className='padding' onClick={() => { tool = 'erase' }}>Erase</Button>\r\n              <Button variant='primary' className='padding' onClick={() => { tool = 'fill' }}>Fill</Button>\r\n              <Button variant='primary' className='padding' onClick={() => { tool = 'picker' }}>Picker</Button>\r\n            </span>\r\n            <span>\r\n              <Button variant='warning' className='padding' onClick={(e) => { undoButton(e) }}>Undo</Button>\r\n              <Button variant='success' className='padding' onClick={(e) => { redoButton(e) }}>Redo</Button>\r\n              <a id='saveButton' download='my-image'><Button variant='info' className='padding' onClick={() => { save() }}>Save Image</Button></a>\r\n            </span>\r\n            <Button variant='primary' className='padding' onClick={() => { tool = 'mirror' }}>Mirror</Button>\r\n            <Button variant='primary' id=\"testTouch\" className='padding' onClick={() => {}}>Test Touch</Button>\r\n          </div>\r\n        </div>\r\n        <div className='rightcolumn'>\r\n          <div className='card'>\r\n            <canvas\r\n              width={canvasWidth}\r\n              height={canvasHeight}\r\n              id='gridcanvas'\r\n            />\r\n            <canvas\r\n              width={canvasWidth}\r\n              height={canvasHeight}\r\n              className='app'\r\n              id='canvas'\r\n              style={{ cursor: 'crosshair' }}\r\n            />\r\n\r\n          </div>\r\n          <div className='card'>\r\n            <span>\r\n              <Button variant='info' className='padding' onClick={() => { toggleGrid() }}>Toggle Grid</Button>\r\n              <span className='clear'>\r\n                <Button variant='danger' className='padding' onClick={() => { tool = clear(params) }}>Clear</Button>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}